{"project":{"attr":{"default":"build"},"if":[{"equals":[{"attr":{"arg1":"${environment}","arg2":"dev"}}],"then":[{"php":[{"attr":{"function":"extension_loaded","returnProperty":"xdebug_enabled"},"param":[{"attr":{"value":"xdebug"}}]}],"if":[{"equals":[{"attr":{"arg1":"${xdebug_enabled}","arg2":"true"}}],"then":[{"exec":[{"attr":{"command":"sudo /opt/tools/bin/phpdismod xdebug","description":"Disable xdebug module","checkreturn":"true","passthru":"true"}}]}]}]}]}],"echo":[{"attr":{"level":"info","message":"Subtargets are not to be executed directly. Main targets are. You can create subtargets if you don't use\n        description argument in the target tag"}}],"target":[{"attr":{"name":"build","depends":"\n        _info,\n        configure,\n        mergeConfig,\n        installVendors,\n        prepareMultiuser,\n        buildAssetsDev,\n        buildAssetsProd,\n        RebuildBootstrap,\n        startConsumers,\n        fixtures.default,\n        configureForum,\n        WarmupDevCache,\n        WarmupProdCache,\n        unittest","description":"Cleans the workspace, update sources and builds the whole application including default fixtures and unit- and functionaltests."}},{"attr":{"name":"ft-build","depends":"\n        _info,\n        configure,\n        mergeConfig,\n        prepareMultiuser,\n        buildAssetsDev,\n        buildAssetsProd,\n        RebuildBootstrap,\n        unittest,\n\t    functionaltest","description":"Just run all targets needed to perform a functionaltest on a clean reset system, assuming code and vendors are already checked out."}},{"attr":{"name":"rebuild","depends":"\n         _info,\n        configure,\n        RebuildBootstrap,\n        prepareMultiuser,\n        installAssets,\n        WarmupDevCache,\n        WarmupProdCache","description":"refreshes the workspace, rebuilds caches, assets and reinstalls fixtures."}},{"attr":{"name":"devRf","description":"alias for devRefreshPHP","depends":"devRefreshPHP","hidden":"true"}},{"attr":{"hidden":"true","name":"devRefreshPHP","depends":"\n        RebuildBootstrap,\n        ClearCache,\n        WarmupDevCache","description":"refreshes the workspace and rebuilds caches."}},{"attr":{"name":"_info","hidden":"true"},"echo":[{"attr":{"level":"warning","message":"Building project '${ec.id}' in ${environment} environment."}}],"if":[{"isset":[{"attr":{"property":"enable.content.overwrite"}}],"then":[{"echo":[{"attr":{"level":"error","message":"This build is not content save!"}}]}],"else":[{"echo":[{"attr":{"level":"warning","message":"This build is contentent save"}},{"attr":{"message":"Set the property 'enable.content.overwrite' to overwrite existing content."}}]}]}]},{"attr":{"name":"configurePaymentHostKey","hidden":"true"},"if":[{"equals":[{"attr":{"arg1":"${config.payment.notification.routing.use_routing_prefix}","arg2":"true"}}],"then":[{"if":[{"not":[{"available":[{"attr":{"file":"${path.base}/systemId.ini","type":"file","property":"systemIniExists"}}]}],"then":[{"echo":[{"attr":{"message":"Need payment routing prefix, but systemId.ini not found - generating ..."}}],"exec":[{"attr":{"command":"mktemp -u --tmpdir=. | sed -ne 's|./tmp.\\(.\\{5\\}\\).*|\\1|p'","outputProperty":"newDevRoutingKey"}}],"append":[{"attr":{"destFile":"${path.base}/systemId.ini","text":"config.payment.notification.routing.key = \"${newDevRoutingKey}\""}}],"property":[{"attr":{"name":"config.payment.notification.routing.key","value":"${newDevRoutingKey}","override":"true"}}]}]}]}]}]},{"attr":{"name":"configure","hidden":"true","depends":"configurePaymentHostKey, configureYuiVersion, configureApplication, copyAppDevFiles","description":"Main target for all config relevant other targets."},"delete":[{"attr":{"file":"${path.base}/app/cache","quiet":"true"}},{"attr":{"dir":"${config.path.cache}","quiet":"true","includeemptydirs":"true"}}],"mkdir":[{"attr":{"dir":"${config.path.cache}"}},{"attr":{"dir":"${config.path.logs}"}}],"phingcall":[{"attr":{"target":"prepareMultiuser"}}],"exec":[{"attr":{"command":"bash build/bin/preflight-check.sh","passthru":"true"}}]},{"attr":{"name":"copyEcConfigFromBuildToAppIfNotExisting","hidden":"true","description":"Copy a config file (template) from build/config/ec to app/config/ec"},"fail":[{"attr":{"unless":"ecConfigToCopy","message":"ecConfigToCopy is not set?!?"}}],"if":[{"not":[{"available":[{"attr":{"file":"${path.base}/app/config/ec/${ecConfigToCopy}","type":"file"}}]}],"then":[{"if":[{"not":[{"available":[{"attr":{"file":"${path.base}/app/config/ec","type":"dir"}}]}],"then":[{"mkdir":[{"attr":{"dir":"${path.base}/app/config/ec"}}]}]}],"echo":[{"attr":{"message":"Copy ${path.base}/build/config/ec/${ecConfigToCopy} to ${path.base}/app/config/ec/${ecConfigToCopy}"}}],"copy":[{"attr":{"file":"${path.base}/build/config/ec/${ecConfigToCopy}","tofile":"${path.base}/app/config/ec/${ecConfigToCopy}","overwrite":"false"}}]}]}]},{"attr":{"name":"installDump","hidden":"false","description":"Installs a stage dump","if":"enable.content.overwrite"},"SymfonyConsole":[{"attr":{"command":"feelgood:dump:install"}}],"exec":[{"attr":{"command":"mongoimport --drop --db ECG --collection Content /tmp/Content.json"}}],"phingcall":[{"attr":{"target":"rebuildIndex"}}]},{"attr":{"name":"copyConfigFromBuildToApp","hidden":"true","description":"Copy a config file (template) from build/config to app/config"},"fail":[{"attr":{"unless":"configToCopy","message":"configToCopy is not set?!?"}}],"echo":[{"attr":{"message":"Copy ${path.base}/build/config/${configToCopy} to ${path.base}/app/config/${configToCopy}"}}],"copy":[{"attr":{"file":"${path.base}/build/config/${configToCopy}","tofile":"${path.base}/app/config/${configToCopy}","overwrite":"true"}}]},{"attr":{"name":"configureApplication","hidden":"true","description":"Configures the application based on environment and EC"},"foreach":[{"attr":{"param":"ecConfigToCopy","target":"copyEcConfigFromBuildToAppIfNotExisting"},"fileset":[{"attr":{"dir":"${path.base}/build/config/ec"},"include":[{"attr":{"name":"*.yml"}}]}]},{"attr":{"param":"configToCopy","target":"copyConfigFromBuildToApp"},"fileset":[{"attr":{"dir":"${path.base}/build/config"},"include":[{"attr":{"name":"config*.yml"}},{"attr":{"name":"routing*.yml"}}]}]}],"if":[{"not":[{"available":[{"attr":{"file":"${path.base}/app/config/ecf","type":"dir"}}]}],"then":[{"mkdir":[{"attr":{"dir":"${path.base}/app/config/ecf"}}]}]},{"available":[{"attr":{"file":"/opt/ecf/config/${ec.id}/","type":"dir"}}],"then":[{"copy":[{"attr":{"todir":"${path.base}/app/config/","overwrite":"true"},"fileset":[{"attr":{"dir":"/opt/ecf/config/${ec.id}/"},"include":[{"attr":{"name":"cloudfront-pk-*"}}]}]}]}]}],"echo":[{"attr":{"message":"Copy ${path.base}/build/config/parameters.yml to ${path.base}/app/config/parameters.yml"}},{"attr":{"message":"Copy ${path.app}/config/ec/parameters.yml to ${path.app}/config/parameters_ec.yml"}},{"attr":{"message":"Copy ${path.base}/app/AppKernel_dev.php to ${path.base}/app/AppKernel.php"}},{"attr":{"message":"Copy /opt/ecf/config/${ec.id}/cloudfront-pk-* into ${path.base}/app/config/"}}],"copy":[{"attr":{"file":"${path.base}/build/config/parameters.yml","tofile":"${path.base}/app/config/parameters.yml","overwrite":"true"},"filterchain":[{"expandproperties":[""]}]},{"attr":{"file":"${path.app}/config/ec/parameters.yml","tofile":"${path.app}/config/parameters.ec.yml","overwrite":"true"},"filterchain":[{"expandproperties":[""]}]},{"attr":{"file":"${path.base}/app/AppKernel_dev.php","tofile":"${path.base}/app/AppKernel.php","overwrite":"true"},"filterchain":[{"expandproperties":[""]}]}],"phingcall":[{"attr":{"target":"mergeConfig"}}]},{"attr":{"name":"copyAppDevFiles","hidden":"true","if":"enable.app_dev"},"copy":[{"attr":{"file":"${path.base}/build/templates/web/app_debug.php","tofile":"${path.base}/web/app_debug.php","overwrite":"true"}},{"attr":{"file":"${path.base}/build/templates/web/app_dev.php","tofile":"${path.base}/web/app_dev.php","overwrite":"true"}},{"attr":{"file":"${path.base}/build/templates/web/app_dev_esi.php","tofile":"${path.base}/web/app_dev_esi.php","overwrite":"true"}},{"attr":{"file":"${path.base}/build/templates/web/app_test.php","tofile":"${path.base}/web/app_test.php","overwrite":"true"}},{"attr":{"file":"${path.base}/build/templates/web/app_test_cache.php","tofile":"${path.base}/web/app_test_cache.php","overwrite":"true"}},{"attr":{"file":"${path.base}/build/templates/web/app_dev_cache.php","tofile":"${path.base}/web/app_dev_cache.php","overwrite":"true"}}]},{"attr":{"name":"copyTranslations","hidden":"true","if":"enable.translation.overwrite"},"copy":[{"attr":{"todir":"${config.path.cache}/prod/translations/","overwrite":"true"},"fileset":[{"attr":{"dir":"${path.base}/build/templates/cache/prod/translations/"},"include":[{"attr":{"name":"*.php"}}]}]}]},{"attr":{"name":"configureYuiVersion","hidden":"true"},"exec":[{"attr":{"command":"date","outputProperty":"yuiVersionInputDate"}},{"attr":{"command":"echo '${yuiVersionInputDate}' | md5sum","outputProperty":"yuiVersionInputMd5"}},{"attr":{"command":"echo '${yuiVersionInputMd5}' | cut -c -8 -","outputProperty":"yui.versionString"}}],"if":[{"equals":[{"attr":{"arg1":"${yui.version.debug}","arg2":"true"}}],"then":[{"property":[{"attr":{"name":"yuiVersionDebugLogFile","value":"/tmp/tradimo-yui-version-debug.log"}}],"echo":[{"attr":{"file":"${yuiVersionDebugLogFile}","message":"---${line.separator}","append":"true"}},{"attr":{"file":"${yuiVersionDebugLogFile}","message":"Date input is [${yuiVersionInputDate}].${line.separator}","append":"true"}},{"attr":{"file":"${yuiVersionDebugLogFile}","message":"MD5 input is [${yuiVersionInputMd5}].${line.separator}","append":"true"}},{"attr":{"file":"${yuiVersionDebugLogFile}","message":"Cut version is [${yui.versionString}].${line.separator}","append":"true"}}]}]}],"echo":[{"attr":{"message":"Set YUI version string to [${yui.versionString}]."}},{"attr":{"file":"${path.base}/app/config/parameters.yui.yml","msg":"parameters:${line.separator}    yui_loader_version: ${yui.versionString}"}}]},{"attr":{"name":"unittest","description":"Starts a PHPUnit test run for all application test cases"},"if":[{"isset":[{"attr":{"property":"build.unittest.logfolder"}}],"then":[{"exec":[{"attr":{"command":"php -dmemory_limit=-1 -dzend.enable_gc=0 /usr/bin/phpunit -c ${path.phpunit.config} --log-junit ${build.unittest.logfolder}/unittest.${ec.id}.xml","checkreturn":"true","passthru":"true"}}]}],"else":[{"exec":[{"attr":{"command":"php -dmemory_limit=-1 -dzend.enable_gc=0 /usr/bin/phpunit -c ${path.phpunit.config}","checkreturn":"true","passthru":"true"}}]}]}]},{"attr":{"name":"unittest.log","description":"Starts a PHPUnit test run and logs the result to xml","hidden":"true"},"exec":[{"attr":{"command":"php -dmemory_limit=-1 -dzend.enable_gc=0 /usr/bin/phpunit\n            -c ${path.phpunit.config}\n\t\t\t--log-junit ${path.phpunit.logjunit}","checkreturn":"true","passthru":"true"}}]},{"attr":{"name":"unittest.coverage","depends":"loadXdebug","description":"Starts a PHPUnit test run and collects clover compatible code coverage information","hidden":"true"},"delete":[{"attr":{"dir":"${path.phpunit.coveragehtml}","quiet":"true"}}],"echo":[{"attr":{"message":"please find the generated coverage here: ${path.phpunit.coveragehtml}"}},{"attr":{"message":"   -> http://tradimo.local.idn5.org:8080/coverage/"}},{"attr":{"message":"NOTE: xdebug has been loaded - possibly you need to turn it off manually, especially in case of failed tests.."}}],"if":[{"equals":[{"attr":{"arg1":"${user.cli}","arg2":"jenkins"}}],"then":[{"echo":[{"attr":{"message":"Creating coverage report including formats: cloverReport and logJunit for Jenkins"}}],"exec":[{"attr":{"command":"php -dmemory_limit=-1 -dzend.enable_gc=0 /usr/bin/phpunit\n                        -c ${path.phpunit.config}\n                        --coverage-clover ${path.phpunit.cloverReport}\n                        --log-junit ${path.phpunit.logjunit}\n                        --coverage-html ${path.phpunit.coveragehtml}","checkreturn":"true","passthru":"true"}}]}],"else":[{"echo":[{"attr":{"message":"Creating coverage report in html for dev"}}],"exec":[{"attr":{"command":"phpunit\n                        -c ${path.phpunit.config}\n                        --coverage-html ${path.phpunit.coveragehtml}","checkreturn":"true","passthru":"true"}}]}]}],"phingcall":[{"attr":{"description":"Switch off xdebug","target":"unloadXdebug"}}]},{"attr":{"name":"customerVaultWakeUp"},"SymfonyConsole":[{"attr":{"command":"icans:customervault:checkHealthState"}}]},{"attr":{"name":"clearTestCache","if":"enable.content.overwrite"},"echo":[{"attr":{"message":"Clearing cache for test environment"}}],"SymfonyConsole":[{"attr":{"command":"cache:clear --env=test"}}],"property":[{"attr":{"name":"cache.test.cleared","value":"true"}}]},{"attr":{"name":"functionaltest","depends":"\n\t\tconfigure,\n\t\tprepareMultiuser,\n\t\tinstallAssets,\n\t\tRebuildBootstrap,\n\t\tstartTestConsumers,\n\t\tfixtures.test,\n\t\tWarmupTestCache\n\t\t","description":"Currently unavailable as we removed ECF functionaltests. Later on this will run our Behat tests.","if":"enable.content.overwrite","unless":"disable.functionaltest"}},{"attr":{"name":"toggleXdebug","description":"Toggles the load of xdebug for php cli only."},"php":[{"attr":{"function":"extension_loaded","returnProperty":"xdebug_enabled"},"param":[{"attr":{"value":"xdebug"}}]}],"echo":[{"attr":{"message":"The current load state of xdebug is: ${xdebug_enabled}"}}],"if":[{"equals":[{"attr":{"arg1":"${environment}","arg2":"dev"}}],"then":[{"if":[{"equals":[{"attr":{"arg1":"${xdebug_enabled}","arg2":"true"}}],"then":[{"echo":[{"attr":{"message":"Trying to disable xdebug"}}],"phingcall":[{"attr":{"description":"Call unload xdebug","target":"unloadXdebug"}}]}],"else":[{"echo":[{"attr":{"message":"Trying to enable xdebug"}}],"phingcall":[{"attr":{"description":"Call load xdebug","target":"loadXdebug"}}]}]}]}],"else":[{"echo":[{"attr":{"message":"Not allowed to toggle xdebug in this environment."}}]}]}]},{"attr":{"name":"unloadXdebug","description":"Unloads xdebug","hidden":"true"},"if":[{"equals":[{"attr":{"arg1":"${environment}","arg2":"dev"}}],"then":[{"exec":[{"attr":{"command":"sudo /opt/tools/bin/phpdismod xdebug","description":"Disable xdebug module","checkreturn":"true","passthru":"true"}}]}],"else":[{"echo":[{"attr":{"message":"Skipping xdebug-toggling as not in dev environment"}}]}]}]},{"attr":{"name":"loadXdebug","description":"Loads xdebug","hidden":"true"},"if":[{"equals":[{"attr":{"arg1":"${environment}","arg2":"dev"}}],"then":[{"exec":[{"attr":{"command":"sudo /opt/tools/bin/phpenmod xdebug","description":"Enable xdebug module","checkreturn":"true","passthru":"true"}}]}],"else":[{"echo":[{"attr":{"message":"Skipping xdebug-toggling as not in dev environment"}}]}]}]},{"attr":{"name":"fixtures.default","description":"Install default data fixtures to database","depends":"customerVaultWakeUp, purge","if":"enable.content.overwrite","hidden":"true"},"echo":[{"attr":{"message":"Installing fixtures ..."}},{"attr":{"message":"Calling vertical specific additional fixtures ..."}}],"exec":[{"attr":{"command":"php ${path.app}/console feelgood:installFixtures --set=Content","checkreturn":"true","passthru":"true"}}],"phingcall":[{"attr":{"target":"hookToInstallFixturesForVerticalSpecificContent"}},{"attr":{"target":"ensureMongoDbIndexes"}}]},{"attr":{"name":"fixtures.test","depends":"clearTestCache, customerVaultWakeUp, purge.test","description":"Install data fixtures to test database","if":"enable.content.overwrite","hidden":"true"},"echo":[{"attr":{"message":"Installing fixtures to test database ..."}},{"attr":{"message":"Calling vertical specific additional fixtures ..."}}],"exec":[{"attr":{"command":"php ${path.app}/console feelgood:installFixtures --env=test --set=Content","checkreturn":"true","passthru":"true"}}],"phingcall":[{"attr":{"target":"hookToInstallFixturesForVerticalSpecificContent.test"}},{"attr":{"target":"ensureMongoDbIndexes"}}]},{"attr":{"name":"purge","description":"purges the databases for content and structure","if":"enable.content.overwrite","hidden":"true"},"exec":[{"attr":{"command":"php ${path.app}/console icans:feature:content:purge","checkreturn":"true","passthru":"true"}}]},{"attr":{"name":"purge.test","description":"purges the test databases for content and structure","if":"enable.content.overwrite","hidden":"true"},"exec":[{"attr":{"command":"php ${path.app}/console icans:feature:content:purge --env=test","checkreturn":"true","passthru":"true"}}]},{"attr":{"name":"PrepareForBehat","hidden":"false"},"echo":[{"attr":{"message":"Preparing cache for behat test execution"}}],"phingcall":[{"attr":{"target":"ClearCacheFast"}},{"attr":{"target":"WarmupTestCache"}}]},{"attr":{"name":"ClearCacheFast","hidden":"false"},"echo":[{"attr":{"message":"Rm -rf'ing cache"}}],"exec":[{"attr":{"command":"rm -rf ${config.path.cache}*/*","checkreturn":"true","passthru":"true"}}]},{"attr":{"name":"ClearCache","hidden":"true"},"echo":[{"attr":{"message":"Removing cache directories"}}],"exec":[{"attr":{"command":"php ${path.app}/console --env=prod cache:clear --no-warmup --no-debug","checkreturn":"true","passthru":"true"}},{"attr":{"command":"php ${path.app}/console --env=dev cache:clear --no-warmup --no-debug","checkreturn":"true","passthru":"true"}},{"attr":{"command":"php ${path.app}/console --env=test cache:clear --no-warmup --no-debug","checkreturn":"true","passthru":"true"}}],"property":[{"attr":{"name":"cacheclearran","value":"true","override":"true"}}]},{"attr":{"name":"WarmupDevCache","hidden":"true"},"echo":[{"attr":{"message":"Warming up cache [dev] .."}}],"exec":[{"attr":{"command":"php ${path.app}/console --env=dev cache:warmup","checkreturn":"true","passthru":"false"}}]},{"attr":{"name":"WarmupProdCache","hidden":"true"},"echo":[{"attr":{"message":"Warmup cache [prod] .."}}],"exec":[{"attr":{"command":"php ${path.app}/console --env=prod cache:warmup --no-debug","checkreturn":"true","passthru":"true"}}],"property":[{"attr":{"name":"warmupran","value":"true","override":"true"}}]},{"attr":{"name":"WarmupTestCache","hidden":"true"},"echo":[{"attr":{"message":"Warmup cache [test] .."}}],"exec":[{"attr":{"command":"php ${path.app}/console --env=test cache:warmup --no-debug","checkreturn":"true","passthru":"true"}}],"property":[{"attr":{"name":"warmupran","value":"true","override":"true"}}]},{"attr":{"name":"bootstrapRebuildable","hidden":"true"},"if":[{"not":[{"available":[{"attr":{"file":"${path.base}/vendor/bundles/Sensio/Bundle/DistributionBundle/Resources/bin/build_bootstrap.php"}}]}],"then":[{"phingcall":[{"attr":{"target":"installVendors"}}]}]}]},{"attr":{"name":"RebuildBootstrap","depends":"bootstrapRebuildable","hidden":"true"},"echo":[{"attr":{"message":"Remove bootstrap.php.cache .."}},{"attr":{"message":"Rebuild bootstrap.php.cache .."}}],"exec":[{"attr":{"command":"rm -f ${path.app}/bootstrap.php.cache","checkreturn":"true","passthru":"true"}},{"attr":{"command":"php ${path.base}/vendor/bundles/Sensio/Bundle/DistributionBundle/Resources/bin/build_bootstrap.php","checkreturn":"true","passthru":"true"}}]},{"attr":{"name":"cleanVendors","description":"Cleans the vendors directory based on deps","hidden":"true","unless":"disable.vendors"},"echo":[{"attr":{"message":"Removing installed vendors"}}],"exec":[{"attr":{"command":"rm -rf ${path.app}/../vendor/*","checkreturn":"true","passthru":"true"}}]},{"attr":{"name":"installVendors","description":"Installs and updates the vendors directory based on deps","hidden":"true","unless":"disable.vendors"},"echo":[{"attr":{"message":"Install and update vendors"}}],"exec":[{"attr":{"command":"php ${path.bin}/vendors install","checkreturn":"true","passthru":"true"}}],"if":[{"available":[{"attr":{"file":"${path.base}/composer.json"}}],"then":[{"exec":[{"attr":{"command":"composer.phar install","checkreturn":"true","passthru":"true"}}]}]}],"phingcall":[{"attr":{"target":"patchVendors"}}]},{"attr":{"name":"mergeBundleConfig","description":"","hidden":"true"},"fail":[{"attr":{"unless":"bundleConfigToMerge","message":"bundleConfigToMerge is not set?!?"}},{"attr":{"unless":"absBundleConfigToMerge","message":"absBundleConfigToMerge is not set?!?"}}],"append":[{"attr":{"destFile":"${path.base}/app/config/ecf/${bundleConfigToMerge}","file":"${absBundleConfigToMerge}"}}]},{"attr":{"name":"mergeConfig","description":"Merge config.yml from bundles into one config file","hidden":"true"},"delete":[{"attr":{"failonerror":"false"},"fileset":[{"attr":{"dir":"${path.base}/app/config/ecf"},"include":[{"attr":{"name":"config*.yml"}},{"attr":{"name":"rabbitmq*.yml"}},{"attr":{"name":"routing*.yml"}}]}]}],"foreach":[{"attr":{"param":"bundleConfigToMerge","absparam":"absBundleConfigToMerge","target":"mergeBundleConfig"},"mapper":[{"attr":{"type":"flatten"}}],"fileset":[{"attr":{"dir":"${path.base}/src/"},"include":[{"attr":{"name":"Icans/*/Bundle/*/Resources/config/*.yml"}},{"attr":{"name":"Feelgood/*/Resources/config/*.yml"}}]}]},{"attr":{"param":"bundleConfigToMerge","absparam":"absBundleConfigToMerge","target":"mergeBundleConfig"},"fileset":[{"attr":{"dir":"${path.base}/build/config/ecf/"},"include":[{"attr":{"name":"*.yml"}}]}]}],"append":[{"attr":{"destFile":"${path.base}/app/config/ecf/rabbitmq.yml","text":"    producers:${line.separator}"}},{"attr":{"destFile":"${path.base}/app/config/ecf/rabbitmq.yml","file":"${path.base}/app/config/ecf/rabbitmq_producers.yml"}},{"attr":{"destFile":"${path.base}/app/config/ecf/rabbitmq.yml","text":"    consumers:${line.separator}"}},{"attr":{"destFile":"${path.base}/app/config/ecf/rabbitmq.yml","file":"${path.base}/app/config/ecf/rabbitmq_consumers.yml"}}]},{"attr":{"name":"installAssetsRaw","hidden":"true","description":"Just installing the assets throw the app/console command"},"exec":[{"attr":{"command":"php ${path.app}/console assets:install web","checkreturn":"true","passthru":"true"}}]},{"attr":{"name":"installAssets","description":"Installs needed assets into public document root with 'RebuildBootstrap' dependency","depends":"RebuildBootstrap","hidden":"true"},"if":[{"not":[{"isset":[{"attr":{"property":"cacheclearran"}}]}],"then":[{"echo":[{"attr":{"message":"Clearing Cache, first"}}],"phingcall":[{"attr":{"target":"ClearCache"}}]}]}],"phingcall":[{"attr":{"target":"installAssetsRaw"}}]},{"attr":{"name":"asseticDumpProd","description":"Updates compiled assets by using 'assetic'.","hidden":"true"},"echo":[{"attr":{"message":"Compiling assets [prod] .."}}],"exec":[{"attr":{"command":"php ${path.app}/console --env=prod --no-debug assetic:dump","checkreturn":"true","passthru":"true"}}]},{"attr":{"name":"asseticDumpDev","description":"Updates compiled assets by using 'assetic'.","hidden":"true"},"echo":[{"attr":{"message":"Compiling assets [dev] .."}}],"exec":[{"attr":{"command":"php ${path.app}/console --env=dev assetic:dump","checkreturn":"true","passthru":"true"}}]},{"attr":{"name":"kerberos.login","description":"Login at Kerberos. Needs a config file with user and valid keytab.","hidden":"true"},"property":[{"attr":{"file":"${path.base}/build/properties/kerberos.properties"}}],"exec":[{"attr":{"command":"kinit ${kerberos.user} -k -t ${kerberos.keytab} -l 15m","checkreturn":"true","passthru":"true"}}]},{"attr":{"name":"updateSource","description":"Updates the local source tree to the current VCS one","hidden":"true"},"exec":[{"attr":{"command":"git fetch --all --tags --prune && git reset --hard ${build.revision}","dir":"${path.base}","passthru":"true"}}]},{"attr":{"name":"createPhar","description":"Create a phar archive of the application","hidden":"true"},"pharpackage":[{"attr":{"destfile":"./build/app.phar","basedir":"./","stub":"./app/phar-stub.php","compression":"bzip2"},"fileset":[{"attr":{"dir":"./vendor"},"exclude":[{"attr":{"name":"**/docs/**"}},{"attr":{"name":"**/.git/**"}},{"attr":{"name":"**/.svn/**"}},{"attr":{"name":"**/tests/**"}},{"attr":{"name":"**/test/**"}}]},{"attr":{"dir":"./app"},"exclude":[{"attr":{"name":"**/cache/**"}},{"attr":{"name":"**/logs/**"}},{"attr":{"name":"**/.svn/**"}}]},{"attr":{"dir":"./src"},"exclude":[{"attr":{"name":"**/Tests/**"}},{"attr":{"name":"**/.svn/**"}}]}],"metadata":[""]}]},{"attr":{"name":"prepareMultiuser","unless":"build.noMultiuser","description":"Ensures proper filesystem permissions for multiuser (CLI + Webserver) setups. Define 'build.noMultiuser' to skip this target.","hidden":"true"},"echo":[{"attr":{"message":"Setting up required filesystem ACLs.. (input your accounts password if asked for)"}},{"attr":{"message":"ACL setup completed."}}],"exec":[{"attr":{"command":"sudo setfacl -R -m u:${user.cli}:rwx -m u:${user.webserver}:rwx ${config.path.cache} ${config.path.logs}"}},{"attr":{"command":"sudo setfacl -dR -m u:${user.cli}:rwx -m u:${user.webserver}:rwx ${config.path.cache} ${config.path.logs}"}}]},{"attr":{"name":"createOdmProxies","description":"Generates needed proxy classes for ODM","hidden":"true"},"if":[{"equals":[{"attr":{"arg1":"${environment}","arg2":"dev"}}],"then":[{"echo":[{"attr":{"message":"Creating ODM proxy classes [dev].."}}],"exec":[{"attr":{"command":"php ${path.app}/console doctrine:mongodb:generate:proxies --env=dev","checkreturn":"true","passthru":"true"}}]}]}],"echo":[{"attr":{"message":"Creating ODM proxy classes [prod] .."}}],"exec":[{"attr":{"command":"php ${path.app}/console doctrine:mongodb:generate:proxies --env=prod","checkreturn":"true","passthru":"true"}}]},{"attr":{"name":"ensureMongoDbIndexes","description":"Ensures configured indexes are correctly set up in MongoDB database(s).","depends":"hookToEnsureMongoDBIndexForVerticalSpecificContent, ensureMongoDBIndexForContent, ensureMongoDBIndexForImageGridFS, ensureMongoDBIndexForFilesGridFS","hidden":"true"}},{"attr":{"name":"ensureMongoDBIndexForImageGridFS","description":"Ensure Index for the mongo db"},"echo":[{"attr":{"message":"Ensuring Indexes..."}}],"exec":[{"attr":{"command":"php ${path.app}/console icans:mongodb:ensureIndexes --name=fileLookup --connection=${config.mongo.server.uri.default} --database=${config.mongo.image.dbname} --collection=fs.files --fields=key --sortDirection=1","checkreturn":"true","passthru":"true"}}]},{"attr":{"name":"ensureMongoDBIndexForFilesGridFS","description":"Ensure Index for the mongo db"},"echo":[{"attr":{"message":"Ensuring Indexes..."}}],"exec":[{"attr":{"command":"php ${path.app}/console icans:mongodb:ensureIndexes --name=fileLookup --connection=${config.mongo.server.uri.default} --database=${config.mongo.file.dbname} --collection=fs.files --fields=key --sortDirection=1","checkreturn":"true","passthru":"true"}}]},{"attr":{"name":"ensureMongoDBIndexForContent","description":"Ensure Index for the mongo db"},"echo":[{"attr":{"message":"Ensuring Indexes..."}}],"exec":[{"attr":{"command":"php ${path.app}/console icans:mongodb:ensureIndexes --name=userProfileLookup --connection=${config.mongo.server.uri.archive} --database=${config.mongo.archive.dbname} --collection=Content --fields=locale,_id,ecId --sortDirection=1,1,1","checkreturn":"true","passthru":"true"}},{"attr":{"command":"php ${path.app}/console icans:mongodb:ensureIndexes --name=contentGroup --connection=${config.mongo.server.uri.default} --database=${config.ec.mongo.dbname} --collection=Content --fields=contentGroupIdentifier,ecId --sortDirection=1,1","checkreturn":"true","passthru":"true"}},{"attr":{"command":"php ${path.app}/console icans:mongodb:ensureIndexes --name=localizedContent --connection=${config.mongo.server.uri.default} --database=${config.ec.mongo.dbname} --collection=Content --fields=contentGroupIdentifier,locale,ecId --sortDirection=1,1,1 --unique=true --dropDups=true","checkreturn":"true","passthru":"true"}},{"attr":{"command":"php ${path.app}/console icans:mongodb:ensureIndexes --name=commObjectLookup --connection=${config.mongo.server.uri.default} --database=${config.ec.mongo.dbname} --collection=Content --fields=parentCgi,locale,creationTime,isLfbCopy,ecId --sortDirection=1,1,1,1,1","checkreturn":"true","passthru":"true"}},{"attr":{"command":"php ${path.app}/console icans:mongodb:ensureIndexes --name=contentType --connection=${config.mongo.server.uri.default} --database=${config.ec.mongo.dbname} --collection=Content --fields=type,ecId --sortDirection=1,1","checkreturn":"true","passthru":"true"}},{"attr":{"command":"php ${path.app}/console icans:mongodb:ensureIndexes --name=userProfileByCustomerIdLookup --connection=${config.mongo.server.uri.default} --database=${config.ec.mongo.dbname} --collection=Content --fields=customerId,ecId --sortDirection=1,1","checkreturn":"true","passthru":"true"}},{"attr":{"command":"php ${path.app}/console icans:mongodb:ensureIndexes --name=userProfileByScreennameLookup --connection=${config.mongo.server.uri.default} --database=${config.ec.mongo.dbname} --collection=Content --fields=screenName,ecId --sortDirection=1,1","checkreturn":"true","passthru":"true"}},{"attr":{"command":"php ${path.app}/console icans:mongodb:ensureIndexes --name=userProfileByScreennameAndType --connection=${config.mongo.server.uri.default} --database=${config.ec.mongo.dbname} --collection=Content --fields=type,screenName --sortDirection=1,1","checkreturn":"true","passthru":"true"}},{"attr":{"command":"php ${path.app}/console icans:mongodb:ensureIndexes --name=userProfileAndScreenname --connection=${config.mongo.server.uri.default} --database=${config.ec.mongo.dbname} --collection=Content --fields=userProfile,screenName --sortDirection=1,1","checkreturn":"true","passthru":"true"}}]},{"attr":{"name":"rebuildIndex","description":"Rebuilds the index for elastic search for all languages","hidden":"true","if":"enable.content.overwrite"},"echo":[{"attr":{"message":"Rebuilding index for all languages"}}],"exec":[{"attr":{"command":"php ${path.app}/console icans:feature:search:rebuildIndex --delete-indices en ru de internal","checkreturn":"true","passthru":"true"}}]},{"attr":{"name":"rebuildIndex.test","description":"Rebuilds the index for elastic search for all languages","hidden":"true","if":"enable.content.overwrite"},"echo":[{"attr":{"message":"Rebuilding index for all languages"}}],"exec":[{"attr":{"command":"php ${path.app}/console icans:feature:search:rebuildIndex --delete-indices en ru de internal --env=test","checkreturn":"true","passthru":"true"}}]},{"attr":{"name":"cco","description":"Alias for CreateCommunicationObjects","depends":"CreateCommunicationObjects"}},{"attr":{"name":"CreateCommunicationObjects","description":"Creates communication objects for the given parent"},"input":[{"_":"How many communications objects do you want to create?","attr":{"propertyName":"number","defaultValue":"50"}},{"_":"What should be the parent content? (CGI)","attr":{"propertyName":"parentCgi"}},{"_":"What should be the language?","attr":{"propertyName":"locale","defaultValue":"en"}},{"_":"Who should be the author?","attr":{"propertyName":"author","defaultValue":"admin"}}],"SymfonyConsole":[{"attr":{"command":"icans:content:createCommunicationObjects"},"arg":[{"attr":{"value":"${number}"}},{"attr":{"value":"${parentCgi}"}},{"attr":{"value":"${locale}"}},{"attr":{"value":"${author}"}}]}]},{"attr":{"name":"buildAssetSymlinks"},"delete":[{"attr":{"dir":"${path.base}/web/assets","quiet":"true","includeemptydirs":"true"}}],"mkdir":[{"attr":{"dir":"${path.base}/web/assets"}}],"symlink":[{"attr":{"target":"${path.base}/app/assets/dest","link":"${path.base}/web/assets/dest"}},{"attr":{"target":"${path.base}/app/assets/images","link":"${path.base}/web/assets/images"}},{"attr":{"target":"${path.base}/app/assets/fonts","link":"${path.base}/web/assets/fonts"}},{"attr":{"target":"${path.base}/app/assets/components","link":"${path.base}/web/assets/components"}}]},{"attr":{"name":"bap"},"phingcall":[{"attr":{"target":"buildAssetsProd"}}]},{"attr":{"name":"buildAssetsProd"},"phingcall":[{"attr":{"target":"buildAssetSymlinks"}}],"exec":[{"attr":{"command":"${path.app}/assets/node_modules/grunt-cli/bin/grunt --gruntfile=${path.app}/assets/Gruntfile.js --env=prod","passthru":"true"}}]},{"attr":{"name":"bad"},"phingcall":[{"attr":{"target":"buildAssetsDev"}}]},{"attr":{"name":"buildAssets","depends":"buildAssetsDev"}},{"attr":{"name":"buildAssetsDev"},"phingcall":[{"attr":{"target":"buildAssetSymlinks"}}],"exec":[{"attr":{"command":"${path.app}/assets/node_modules/grunt-cli/bin/grunt --gruntfile=${path.app}/assets/Gruntfile.js --env=dev","passthru":"true"}}]},{"attr":{"name":"info","description":"Shows a info message","hidden":"true"},"echo":["\n            Targets:\n            build           Cleans the workspace, update sources and builds the whole application including default fixtures.\n            rebuild         refreshes the workspace and rebuilds caches and assets.\n            unittest        Starts a PHPUnit test run for all application test cases\n\n            Properties:\n            -Denvironment=XXX                Set environment ('prod' || 'dev')\n            -Denable.content.overwrite       When building in a content save environment, force installation of fixtures\n            -Denable.translation.overwrite   When building in a content save environment, copy language variables from template to cache\n            -Ddisable.bundles                Build without installing/updating bundles\n            -Ddisable.vendors                Build without installing/updating vendors\n            -Ddisable.consumer.control       Disables Restart of Consumers during build\n\n        "],"input":[{"_":"Call target:","attr":{"propertyName":"call.target","defaultValue":"rebuild"}}],"if":[{"equals":[{"attr":{"arg1":"${call.target}","arg2":"exit"}}],"then":[{"fail":[""]}],"else":[{"phingcall":[{"attr":{"target":"${call.target}"}}]}]}]},{"attr":{"name":"stopAllConsumers","if":"enable.consumer.control","unless":"disable.consumer.control","hidden":"true"},"echo":[{"attr":{"level":"info","msg":"stopping all RabbitMQ-Consumers..."}}],"exec":[{"attr":{"passthru":"true","command":"sudo supervisorctl stop ${ec.id}: ${ec.id}-test:","checkreturn":"true"}}]},{"attr":{"name":"restartSupervisor","if":"enable.consumer.control","unless":"disable.consumer.control"},"echo":[{"attr":{"level":"info","msg":"checking if supervisor is running..."}},{"attr":{"level":"info","msg":"Starting Supervisor..."}}],"exec":[{"attr":{"passthru":"false","output":"/dev/null","returnProperty":"supervisor.running","command":"sudo service supervisor status"}},{"attr":{"passthru":"true","command":"sudo service supervisor start","checkreturn":"true"}}],"if":[{"equals":[{"attr":{"arg1":"${supervisor.running}","arg2":"0"}}],"then":[{"echo":[{"attr":{"level":"info","msg":"Supervisor is already running, stopping it..."}},{"attr":{"level":"info","msg":"waiting 5 seconds for supervisor to really shutdown..."}}],"exec":[{"attr":{"passthru":"true","command":"sudo service supervisor stop","checkreturn":"true"}},{"attr":{"command":"/bin/sleep 5","passthru":"false","output":"/dev/null"}}]}]}]},{"attr":{"name":"startTestConsumers","depends":"clearTestCache","if":"enable.consumer.control","unless":"disable.consumer.control","hidden":"true"},"phingcall":[{"attr":{"target":"stopAllConsumers"}}],"echo":[{"attr":{"level":"info","msg":"Starting test consumers for EC '${ec.id}'..."}}],"exec":[{"attr":{"passthru":"true","command":"sudo supervisorctl start ${ec.id}-test:"}}]},{"attr":{"name":"startConsumers","if":"enable.consumer.control","unless":"disable.consumer.control","hidden":"true"},"phingcall":[{"attr":{"target":"stopAllConsumers"}}],"echo":[{"attr":{"level":"info","msg":"Starting consumers for EC '${ec.id}'..."}}],"exec":[{"attr":{"passthru":"true","command":"sudo supervisorctl start ${ec.id}:"}}]}]}}